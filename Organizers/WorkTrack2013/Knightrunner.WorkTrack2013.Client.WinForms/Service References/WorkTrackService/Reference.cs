//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Project", Namespace="http://schemas.knightrunner.com/Organizers/WorkTrack2013/1.0")]
    [System.SerializableAttribute()]
    public partial class Project : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentProjectPublicIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PublicIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentProjectPublicId {
            get {
                return this.ParentProjectPublicIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentProjectPublicIdField, value) != true)) {
                    this.ParentProjectPublicIdField = value;
                    this.RaisePropertyChanged("ParentProjectPublicId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PublicId {
            get {
                return this.PublicIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PublicIdField, value) != true)) {
                    this.PublicIdField = value;
                    this.RaisePropertyChanged("PublicId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityType", Namespace="http://schemas.knightrunner.com/Organizers/WorkTrack2013/1.0")]
    [System.SerializableAttribute()]
    public partial class ActivityType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PublicIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PublicId {
            get {
                return this.PublicIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PublicIdField, value) != true)) {
                    this.PublicIdField = value;
                    this.RaisePropertyChanged("PublicId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Reminder", Namespace="http://schemas.datacontract.org/2004/07/Knightrunner.WorkTrack2013.Contract")]
    [System.SerializableAttribute()]
    public partial class Reminder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DaysOfMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DaysOfWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MinutesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MonthsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string YearsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DaysOfMonth {
            get {
                return this.DaysOfMonthField;
            }
            set {
                if ((object.ReferenceEquals(this.DaysOfMonthField, value) != true)) {
                    this.DaysOfMonthField = value;
                    this.RaisePropertyChanged("DaysOfMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DaysOfWeek {
            get {
                return this.DaysOfWeekField;
            }
            set {
                if ((object.ReferenceEquals(this.DaysOfWeekField, value) != true)) {
                    this.DaysOfWeekField = value;
                    this.RaisePropertyChanged("DaysOfWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hours {
            get {
                return this.HoursField;
            }
            set {
                if ((object.ReferenceEquals(this.HoursField, value) != true)) {
                    this.HoursField = value;
                    this.RaisePropertyChanged("Hours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Minutes {
            get {
                return this.MinutesField;
            }
            set {
                if ((object.ReferenceEquals(this.MinutesField, value) != true)) {
                    this.MinutesField = value;
                    this.RaisePropertyChanged("Minutes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Months {
            get {
                return this.MonthsField;
            }
            set {
                if ((object.ReferenceEquals(this.MonthsField, value) != true)) {
                    this.MonthsField = value;
                    this.RaisePropertyChanged("Months");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Seconds {
            get {
                return this.SecondsField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondsField, value) != true)) {
                    this.SecondsField = value;
                    this.RaisePropertyChanged("Seconds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Years {
            get {
                return this.YearsField;
            }
            set {
                if ((object.ReferenceEquals(this.YearsField, value) != true)) {
                    this.YearsField = value;
                    this.RaisePropertyChanged("Years");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JournalEntry", Namespace="http://schemas.knightrunner.com/Organizers/WorkTrack2013/1.0")]
    [System.SerializableAttribute()]
    public partial class JournalEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.JournalEntryType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.JournalEntryTypeOrigin TypeOriginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((this.DateTimeField.Equals(value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.JournalEntryType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.JournalEntryTypeOrigin TypeOrigin {
            get {
                return this.TypeOriginField;
            }
            set {
                if ((this.TypeOriginField.Equals(value) != true)) {
                    this.TypeOriginField = value;
                    this.RaisePropertyChanged("TypeOrigin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JournalEntryType", Namespace="http://schemas.knightrunner.com/Organizers/WorkTrack2013/1.0")]
    public enum JournalEntryType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        User = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OperatingSystem = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserSession = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LockUnlock = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Idle = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Application = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PunchClock = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JournalEntryTypeOrigin", Namespace="http://schemas.knightrunner.com/Organizers/WorkTrack2013/1.0")]
    public enum JournalEntryTypeOrigin : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefined = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Start = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        End = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Activity", Namespace="http://schemas.knightrunner.com/Organizers/WorkTrack2013/1.0")]
    [System.SerializableAttribute()]
    public partial class Activity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityPublicIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.TimeSpan> DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectPublicIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityPublicId {
            get {
                return this.ActivityPublicIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityPublicIdField, value) != true)) {
                    this.ActivityPublicIdField = value;
                    this.RaisePropertyChanged("ActivityPublicId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectPublicId {
            get {
                return this.ProjectPublicIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectPublicIdField, value) != true)) {
                    this.ProjectPublicIdField = value;
                    this.RaisePropertyChanged("ProjectPublicId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0", ConfigurationName="WorkTrackService.IWorkTrack")]
    public interface IWorkTrack {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetProje" +
            "cts", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetProje" +
            "ctsResponse")]
        Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Project[] GetProjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetProje" +
            "cts", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetProje" +
            "ctsResponse")]
        System.Threading.Tasks.Task<Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Project[]> GetProjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetChild" +
            "Projects", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetChild" +
            "ProjectsResponse")]
        Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Project[] GetChildProjects(string publicId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetChild" +
            "Projects", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetChild" +
            "ProjectsResponse")]
        System.Threading.Tasks.Task<Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Project[]> GetChildProjectsAsync(string publicId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/SaveProj" +
            "ect", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/SaveProj" +
            "ectResponse")]
        void SaveProject(Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Project project);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/SaveProj" +
            "ect", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/SaveProj" +
            "ectResponse")]
        System.Threading.Tasks.Task SaveProjectAsync(Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Project project);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetActiv" +
            "ityTypes", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetActiv" +
            "ityTypesResponse")]
        Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.ActivityType[] GetActivityTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetActiv" +
            "ityTypes", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetActiv" +
            "ityTypesResponse")]
        System.Threading.Tasks.Task<Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.ActivityType[]> GetActivityTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/SaveActi" +
            "vityType", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/SaveActi" +
            "vityTypeResponse")]
        void SaveActivityType(Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.ActivityType activityType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/SaveActi" +
            "vityType", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/SaveActi" +
            "vityTypeResponse")]
        System.Threading.Tasks.Task SaveActivityTypeAsync(Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.ActivityType activityType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetRemin" +
            "ders", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetRemin" +
            "dersResponse")]
        Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Reminder GetReminders(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetRemin" +
            "ders", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetRemin" +
            "dersResponse")]
        System.Threading.Tasks.Task<Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Reminder> GetRemindersAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/SaveRemi" +
            "nder", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/SaveRemi" +
            "nderResponse")]
        void SaveReminder(Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Reminder reminder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/SaveRemi" +
            "nder", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/SaveRemi" +
            "nderResponse")]
        System.Threading.Tasks.Task SaveReminderAsync(Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Reminder reminder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/DeleteRe" +
            "minder", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/DeleteRe" +
            "minderResponse")]
        void DeleteReminder(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/DeleteRe" +
            "minder", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/DeleteRe" +
            "minderResponse")]
        System.Threading.Tasks.Task DeleteReminderAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetJourn" +
            "alEntries", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetJourn" +
            "alEntriesResponse")]
        Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.JournalEntry[] GetJournalEntries(string userId, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetJourn" +
            "alEntries", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetJourn" +
            "alEntriesResponse")]
        System.Threading.Tasks.Task<Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.JournalEntry[]> GetJournalEntriesAsync(string userId, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/SaveJour" +
            "nalEntry", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/SaveJour" +
            "nalEntryResponse")]
        void SaveJournalEntry(Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.JournalEntry journalEntry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/SaveJour" +
            "nalEntry", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/SaveJour" +
            "nalEntryResponse")]
        System.Threading.Tasks.Task SaveJournalEntryAsync(Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.JournalEntry journalEntry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/DeleteJo" +
            "urnalEntry", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/DeleteJo" +
            "urnalEntryResponse")]
        void DeleteJournalEntry(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/DeleteJo" +
            "urnalEntry", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/DeleteJo" +
            "urnalEntryResponse")]
        System.Threading.Tasks.Task DeleteJournalEntryAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetActiv" +
            "ities", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetActiv" +
            "itiesResponse")]
        Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Activity[] GetActivities(string userId, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetActiv" +
            "ities", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/GetActiv" +
            "itiesResponse")]
        System.Threading.Tasks.Task<Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Activity[]> GetActivitiesAsync(string userId, System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/SaveActi" +
            "vity", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/SaveActi" +
            "vityResponse")]
        void SaveActivity(Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Activity activity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/SaveActi" +
            "vity", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/SaveActi" +
            "vityResponse")]
        System.Threading.Tasks.Task SaveActivityAsync(Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Activity activity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/DeleteAc" +
            "tivity", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/DeleteAc" +
            "tivityResponse")]
        void DeleteActivity(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/DeleteAc" +
            "tivity", ReplyAction="http://services.knightrunner.com/Organizers/WorkTrack2013/1.0/IWorkTrack/DeleteAc" +
            "tivityResponse")]
        System.Threading.Tasks.Task DeleteActivityAsync(long id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWorkTrackChannel : Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.IWorkTrack, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkTrackClient : System.ServiceModel.ClientBase<Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.IWorkTrack>, Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.IWorkTrack {
        
        public WorkTrackClient() {
        }
        
        public WorkTrackClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WorkTrackClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WorkTrackClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WorkTrackClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Project[] GetProjects() {
            return base.Channel.GetProjects();
        }
        
        public System.Threading.Tasks.Task<Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Project[]> GetProjectsAsync() {
            return base.Channel.GetProjectsAsync();
        }
        
        public Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Project[] GetChildProjects(string publicId) {
            return base.Channel.GetChildProjects(publicId);
        }
        
        public System.Threading.Tasks.Task<Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Project[]> GetChildProjectsAsync(string publicId) {
            return base.Channel.GetChildProjectsAsync(publicId);
        }
        
        public void SaveProject(Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Project project) {
            base.Channel.SaveProject(project);
        }
        
        public System.Threading.Tasks.Task SaveProjectAsync(Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Project project) {
            return base.Channel.SaveProjectAsync(project);
        }
        
        public Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.ActivityType[] GetActivityTypes() {
            return base.Channel.GetActivityTypes();
        }
        
        public System.Threading.Tasks.Task<Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.ActivityType[]> GetActivityTypesAsync() {
            return base.Channel.GetActivityTypesAsync();
        }
        
        public void SaveActivityType(Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.ActivityType activityType) {
            base.Channel.SaveActivityType(activityType);
        }
        
        public System.Threading.Tasks.Task SaveActivityTypeAsync(Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.ActivityType activityType) {
            return base.Channel.SaveActivityTypeAsync(activityType);
        }
        
        public Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Reminder GetReminders(string userId) {
            return base.Channel.GetReminders(userId);
        }
        
        public System.Threading.Tasks.Task<Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Reminder> GetRemindersAsync(string userId) {
            return base.Channel.GetRemindersAsync(userId);
        }
        
        public void SaveReminder(Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Reminder reminder) {
            base.Channel.SaveReminder(reminder);
        }
        
        public System.Threading.Tasks.Task SaveReminderAsync(Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Reminder reminder) {
            return base.Channel.SaveReminderAsync(reminder);
        }
        
        public void DeleteReminder(long id) {
            base.Channel.DeleteReminder(id);
        }
        
        public System.Threading.Tasks.Task DeleteReminderAsync(long id) {
            return base.Channel.DeleteReminderAsync(id);
        }
        
        public Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.JournalEntry[] GetJournalEntries(string userId, System.DateTime from, System.DateTime to) {
            return base.Channel.GetJournalEntries(userId, from, to);
        }
        
        public System.Threading.Tasks.Task<Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.JournalEntry[]> GetJournalEntriesAsync(string userId, System.DateTime from, System.DateTime to) {
            return base.Channel.GetJournalEntriesAsync(userId, from, to);
        }
        
        public void SaveJournalEntry(Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.JournalEntry journalEntry) {
            base.Channel.SaveJournalEntry(journalEntry);
        }
        
        public System.Threading.Tasks.Task SaveJournalEntryAsync(Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.JournalEntry journalEntry) {
            return base.Channel.SaveJournalEntryAsync(journalEntry);
        }
        
        public void DeleteJournalEntry(long id) {
            base.Channel.DeleteJournalEntry(id);
        }
        
        public System.Threading.Tasks.Task DeleteJournalEntryAsync(long id) {
            return base.Channel.DeleteJournalEntryAsync(id);
        }
        
        public Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Activity[] GetActivities(string userId, System.DateTime from, System.DateTime to) {
            return base.Channel.GetActivities(userId, from, to);
        }
        
        public System.Threading.Tasks.Task<Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Activity[]> GetActivitiesAsync(string userId, System.DateTime from, System.DateTime to) {
            return base.Channel.GetActivitiesAsync(userId, from, to);
        }
        
        public void SaveActivity(Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Activity activity) {
            base.Channel.SaveActivity(activity);
        }
        
        public System.Threading.Tasks.Task SaveActivityAsync(Knightrunner.WorkTrack2013.Client.WinForms.WorkTrackService.Activity activity) {
            return base.Channel.SaveActivityAsync(activity);
        }
        
        public void DeleteActivity(long id) {
            base.Channel.DeleteActivity(id);
        }
        
        public System.Threading.Tasks.Task DeleteActivityAsync(long id) {
            return base.Channel.DeleteActivityAsync(id);
        }
    }
}
